services:
  # Kafka broker service
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: order-system-broker
    ports:
      - '9093:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - order-system-network

  # PostgreSQL database
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - order-system-network

  # Database Migrator service
  database-migrator:
    build:
      context: .
      dockerfile: DatabaseMigrator/Dockerfile
    container_name: database-migrator
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
      broker:
        condition: service_started
    environment:
      - ConnectionStrings__OrdersDb=Host=postgres;Database=ordersdb;Username=postgres;Password=postgres;
      - KAFKA_BOOTSTRAP_SERVERS=broker:19092
    networks:
      - order-system-network

  # PgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ordersystem.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - order-system-network

  # Processing Orders API service
  processing-orders-api:
    build:
      context: ./ProcessingOrders
      dockerfile: ProcessingOrders.Api/Dockerfile
    container_name: processing-orders-api
    restart: unless-stopped
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Kafka__BootstrapServers=broker:19092
      - Kafka__OrdersTopic=orders
      - Kafka__OrdersDiscountTopic=orders-discounts
    depends_on:
      - broker
      - database-migrator
    networks:
      - order-system-network

  # Mailings service
  mailings-service:
    build: ./Mailings
    container_name: mailings-service
    restart: unless-stopped
    ports:
      - "8081:8080"
    depends_on:
      - broker
      - database-migrator
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:19092
      KAFKA_ORDERS_TOPIC: orders
      KAFKA_ORDERS_DISCOUNT_TOPIC: orders-discounts
      KAFKA_GROUP_ID: mailings-service
      POSTGRES_CONNECTION_STRING: Host=postgres;Database=ordersdb;Username=postgres;Password=postgres
    networks:
      - order-system-network
      
  # Promotions service
  promotions-service:
    build: ./Promotions
    container_name: promotions-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - broker
      - database-migrator
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:19092
      - KAFKA_ORDERS_TOPIC=orders
      - KAFKA_ORDERS_DISCOUNT_TOPIC=orders-discounts
      - KAFKA_GROUP_ID=promotions-service
      - POSTGRES_CONNECTION_STRING=postgres://postgres:postgres@postgres:5432/ordersdb?sslmode=disable
    networks:
      - order-system-network

volumes:
  postgres-data:
  pgadmin-data:
  orders-db-data:

networks:
  order-system-network:
    driver: bridge 